apiVersion: v1
kind: Template
labels:
  template: activemq
message: A new persistent messaging service has been created in your project.
metadata:
  name: activemq
  creationTimestamp: null
  annotations:
    description: Application template for ActiveMQ. These can be deployed
      as standalone and use persistent storage for saving messages
    iconClass: icon-amq
    openshift.io/display-name: ActiveMQ 5.15.7
    openshift.io/provider-display-name: Mindbox
    tags: messaging,amq
    version: 5.15.7

parameters:
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: activemq
- name: ACTIVEMQ_USER
  description: "Username for the ActiveMQ instance"
  value: admin
- name: ACTIVEMQ_PASS
  description: "Password securing the ActiveMQ instance"
  generate: expression
  from: "[a-zA-Z0-9]{16}"
- name: VOLUME_SIZE
  description: "Size of the RabbitMQ data volume"
  value: 1Gi
  required: true
- name: GITHUB_URL
  description: "Github URL"
  value: https://github.com/devandtest/openshift-activemq.git
  required: true
- name: GITHUB_REPO_BRANCH
  description: "Github Repo Branch"
  value: master
  required: true

objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    generation: 1
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - image: ''
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 61616
            protocol: TCP
          - containerPort: 8161
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/activemq/data
              name: activemq-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: activemq-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: ${GITHUB_URL}
        ref: ${GITHUB_REPO_BRANCH}
      type: Git
    strategy:
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: iC5AZ9ft5C5XgfrYkKQT
      type: GitHub
    - generic:
        secret: -z44GI1g-dXhvhWSGc5W
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8161-tcp
      port: 8161
      protocol: TCP
      targetPort: 8161
    - name: 61616-tcp
      port: 61616
      protocol: TCP
      targetPort: 61616
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8161-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-pvc-claim
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${VOLUME_SIZE}
